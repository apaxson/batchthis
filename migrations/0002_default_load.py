# Generated by Django 3.0.3 on 2020-03-16 01:17

from django.db import migrations

def loadDefaults(apps, schema_editor):
    db = schema_editor.connection.alias
    BatchNoteType = apps.get_model('batchthis', 'BatchNoteType')
    BatchNoteType.objects.using(db).create(name="General Note")
    BatchNoteType.objects.using(db).create(name="Fermentation Note")
    BatchNoteType.objects.using(db).create(name="Tasting Note")

    BatchTestType = apps.get_model('batchthis', 'BatchTestType')
    BatchTestType.objects.using(db).create(name="Specific Gravity", shortid="specific-gravity")
    BatchTestType.objects.using(db).create(name="pH", shortid="ph")
    BatchTestType.objects.using(db).create(name="YAN", shortid="yan")
    BatchTestType.objects.using(db).create(name="SO2", shortid="so2")
    BatchTestType.objects.using(db).create(name="TA", shortid="ta")
    BatchTestType.objects.using(db).create(name="Temperature", shortid="temperature")

    Unit = apps.get_model('batchthis', 'Unit')
    Unit.objects.using(db).create(name="Milligrams per Liter", identifier="mgL", label = "mg/L", category=1)
    Unit.objects.using(db).create(name="Specific Gravity", identifier="specific-gravity", category=1)
    Unit.objects.using(db).create(name="Parts Per Million", identifier="ppm", category=1)
    Unit.objects.using(db).create(name="Fahrenheit", identifier="f", label="F", category=0)
    Unit.objects.using(db).create(name="Celcius", identifier="c", label="C", category=0)
    Unit.objects.using(db).create(name="Gallons", identifier="g", label="G", category=5)
    Unit.objects.using(db).create(name="Liters", identifier="l", label="L", category=5)
    Unit.objects.using(db).create(name="Grams", identifier="g", label="g", category=2)
    Unit.objects.using(db).create(name="Pounds", identifier="lb", label="lb", category=2)

    Style = apps.get_model('batchthis', 'BatchStyle')
    Style.objects.using(db).create(name="Beer")
    Style.objects.using(db).create(name="Cider")
    Style.objects.using(db).create(name="Wine")
    Style.objects.using(db).create(name="Mead")
    Category = apps.get_model('batchthis', 'BatchCategory')
    for style in Style.objects.all():
        if style.name == "Beer":
            Category.objects.using(db).create(name="Lite American Lager", bjcp_code="1A", style=style)
            Category.objects.using(db).create(name="Standard American Lager", bjcp_code="1B", style=style)
            Category.objects.using(db).create(name="Premium American Lager", bjcp_code="1C", style=style)
            Category.objects.using(db).create(name="Munich Helles", bjcp_code="1D", style=style)
            Category.objects.using(db).create(name="Dortmunder Export", bjcp_code="1E", style=style)
            Category.objects.using(db).create(name="German Pilsner", bjcp_code="2A", style=style)
            Category.objects.using(db).create(name="Bohemian Pilsner", bjcp_code="2B", style=style)
            Category.objects.using(db).create(name="Classic American Pilsner", bjcp_code="2C", style=style)
            Category.objects.using(db).create(name="Classic American Pilsner", bjcp_code="2C", style=style)
        if style.name == "Mead":
            Category.objects.using(db).create(name="Dry Mead", bjcp_code="24A", style=style)
            Category.objects.using(db).create(name="Semi-Sweet Mead", bjcp_code="24B", style=style)
            Category.objects.using(db).create(name="Sweet Mead", bjcp_code="24C", style=style)
            Category.objects.using(db).create(name="Cyser", bjcp_code="25A", style=style)
            Category.objects.using(db).create(name="Pyment", bjcp_code="25B", style=style)
            Category.objects.using(db).create(name="Other Melomel", bjcp_code="25C", style=style)
        if style.name == "Cider":
            Category.objects.using(db).create(name="Common Cider", bjcp_code="27A", style=style)
            Category.objects.using(db).create(name="English Cider", bjcp_code="27B", style=style)
            Category.objects.using(db).create(name="French Cider", bjcp_code="27C", style=style)
            Category.objects.using(db).create(name="Common Perry", bjcp_code="27D", style=style)
            Category.objects.using(db).create(name="Traditional Perry", bjcp_code="27E", style=style)
        if style.name == "Wine":
            Category.objects.using(db).create(name="Chardonnay", bjcp_code="100", style=style)
            Category.objects.using(db).create(name="Sauvignon Blanc", bjcp_code="110", style=style)
            Category.objects.using(db).create(name="Semillon", bjcp_code="115", style=style)
            Category.objects.using(db).create(name="Pinot Blanc", bjcp_code="120", style=style)


class Migration(migrations.Migration):

    dependencies = [
        ('batchthis', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(loadDefaults)
    ]
